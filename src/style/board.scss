@use "sass:map";
@use "sass:math";

@import "./helpers.scss";
$grid-max-size: 10;

:root {
	--field-width: 500px;
	--grid-gap: 15px;
	--game-container-margin-top: 40px;
	--transition-speed: 100ms;

	--grid-size: 4;
	--grid-size-max: 5;
	--tile-size: calc(
		calc(
				var(--field-width, var(--default-field-width)) -
					calc(var(--grid-gap, var(--default-grid-gap)) * calc(var(--grid-size) + 1))
			) / var(--grid-size)
	);
	--tile-border-radius: 3px;
	--tile-color: #eee4da;
}

//kurinpalautus
@include keyframes(fade-in-out) {
	0% {
		opacity: 0;
	}

	50% {
		opacity: 1;
	}

	100% {
		opacity: 0;
	}
}

.game-container .kurin-palautus-viesti {
	width: 94%;
	position: absolute;
	top: 25px;

	display: -webkit-flex;
	display: flex;
	justify-content: center;

	z-index: 1000;
	pointer-events: none;

	& img {
		width: 300px;

		@include animation(fade-in-out 4000ms ease-out);
		@include animation-fill-mode(both);
	}
}

@mixin game-field {
	.game-container {
		margin-top: var(--game-container-margin-top);
		margin-left: auto;
		margin-right: auto;
		position: relative;
		padding: var(--grid-gap);

		cursor: default;
		-webkit-touch-callout: none;
		-ms-touch-callout: none;

		user-select: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;

		-ms-touch-action: none;
		touch-action: none;

		background: var(--game-container-background);
		transition: all 0.25s;
		border-radius: calc(var(--tile-border-radius) * 2);
		width: var(--field-width);
		height: var(--field-width);
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;

		.game-message {
			display: none;

			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			z-index: 100;

			text-align: center;

			p {
				line-height: 60px;
				font-weight: bold;
				text-shadow: 0 0 0.75em var(--dialog-background);
			}

			.tilanne {
				font-size: 60px;
				margin-top: 180px;
				// height: $field-width;
				// line-height: $field-width;
			}

			.kurinpalautukset {
				font-size: 20px;
			}

			.lower {
				display: flex;
				justify-content: center;
				gap: 0.5em;
				& {
					.keep-playing-button {
						display: none;
					}
				}
			}

			@include animation(fade-in 800ms ease calc(var(--transition-speed) * 12));
			@include animation-fill-mode(both);

			&.game-won {
				background: #edc22e80;
				color: var(--color);

				.keep-playing-button {
					display: inline-block;
				}
			}

			&.game-won,
			&.game-over {
				display: block;
				border-radius: calc(var(--tile-border-radius) * 2);
				backdrop-filter: blur(3px) saturate(0.5);
			}
		}
	}

	.grid-container {
		position: absolute;
		z-index: 1;
		overflow: hidden;
		display: grid;
		grid-template-rows: repeat(var(--grid-size-max), var(--tile-size));
		grid-template-columns: repeat(var(--grid-size-max), var(--tile-size));
		gap: var(--grid-gap);
		height: calc(100% - calc(var(--grid-gap) * 2));
		width: calc(100% - calc(var(--grid-gap) * 2));
		transition: all 0.25s;
	}

	.grid-row {
		display: grid;
		grid-template-columns: repeat(var(--grid-size), var(--tile-size));
		gap: var(--grid-gap);
		overflow: hidden;

		&:last-child {
			margin-bottom: 0;
		}

		&:after {
			content: "";
			display: block;
			clear: both;
		}
	}

	.grid-cell {
		width: var(--tile-size);
		height: var(--tile-size);
		margin-right: var(--grid-gap);
		transition: all 0.25s;

		border-radius: var(--tile-border-radius);

		background: var(--tile-color);
		opacity: 0.35;

		&:last-child {
			margin-right: 0;
		}
	}

	.tile-container {
		position: absolute;
		z-index: 2;
	}

	.tile {
		&,
		.tile-inner {
			width: var(--tile-size);
			height: var(--tile-size);
			line-height: var(--tile-size);
			image-rendering: auto;
		}

		// Build position classes
		@for $x from 1 through $grid-max-size {
			@for $y from 1 through $grid-max-size {
				&.tile-position-#{$x}-#{$y} {
					--x: #{$x};
					--y: #{$y};
					--xpos: calc(calc(var(--tile-size) + var(--grid-gap)) * calc(var(--x) - 1));
					--ypos: calc(calc(var(--tile-size) + var(--grid-gap)) * calc(var(--y) - 1));
					@include transform(translate(var(--xpos), var(--ypos)));
				}
			}
		}
	}
}

@include game-field;

@include keyframes(fade-in) {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

//kurinpalautus
@include keyframes(fade-in-out) {
	0% {
		opacity: 0;
	}

	50% {
		opacity: 1;
	}

	100% {
		opacity: 0;
	}
}

.tile {
	position: absolute; // Makes transforms relative to the top-left corner

	.tile-inner {
		background-image: url("/img/tile_unknown.png");
		border-radius: var(--tile-border-radius);

		text-align: center;
		font-weight: bold;
		z-index: 10;

		font-size: 55px;

		background-size: cover;
	}

	// Movement transition
	@include transition(var(--transition-speed) ease-in-out);
	-webkit-transition-property: -webkit-transform;
	-moz-transition-property: -moz-transform;
	transition-property: transform;

	$base: 2;
	$exponent: 1;
	$limit: 11;

	// Colors for all 11 states, false = no special color
	$special-colors: false false,
		// 2
		false false,
		// 4
		#f78e48 true,
		// 8
		#fc5e2e true,
		// 16
		#ff3333 true,
		// 32
		#ff0000 true,
		// 64
		false true,
		// 128
		false true,
		// 256
		false true,
		// 512
		false true,
		// 1024
		false true; // 2048
}

@include keyframes(appear) {
	0% {
		opacity: 0;
		@include transform(scale(0));
	}

	100% {
		opacity: 1;
		@include transform(scale(1));
	}
}

.tile-new .tile-inner {
	@include animation(appear 200ms ease var(--transition-speed));
	@include animation-fill-mode(backwards);
}

@include keyframes(pop) {
	0% {
		@include transform(scale(0));
	}

	50% {
		@include transform(scale(1.2));
	}

	100% {
		@include transform(scale(1));
	}
}

.tile-merged .tile-inner {
	z-index: 20;
	@include animation(pop 200ms ease var(--transition-speed));
	@include animation-fill-mode(backwards);
}
